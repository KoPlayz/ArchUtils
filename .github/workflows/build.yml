name: Build and Release Arch ISO

on:
  schedule:
    - cron: "0 0 1 * *"  # Runs at midnight UTC on the 1st of every month
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install QEMU and Dependencies
        run: |
          sudo apt update
          sudo apt install -y qemu-system-x86 qemu-utils cloud-image-utils wget openssh-client

      - name: Create SSH Directory
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/known_hosts

      - name: Download and Prepare Arch Linux Image
        run: |
          wget https://geo.mirror.pkgbuild.com/iso/latest/archlinux-x86_64.iso -O archlinux.iso
          qemu-img create -f qcow2 archvm.qcow2 20G

      - name: Launch QEMU and Wait for SSH
        run: |
          echo "Starting QEMU..."
          setsid sudo qemu-system-x86_64 \
            -m 4G \
            -smp 2 \
            -drive file=archvm.qcow2,format=qcow2 \
            -cdrom archlinux.iso \
            -net user,hostfwd=tcp::2222-:22 -net nic \
            -nographic > qemu.log 2>&1 &

          echo "Waiting for VM to boot..."
          for i in {1..30}; do
            if nc -z localhost 2222; then
              echo "VM is up!"
              break
            fi
            echo "Waiting..."
            sleep 5
          done

          echo "Setting up SSH access..."
          if grep -q "[localhost]:2222" ~/.ssh/known_hosts; then
            ssh-keygen -R "[localhost]:2222"
          fi
          ssh-keyscan -p 2222 localhost >> ~/.ssh/known_hosts

      - name: Build ISO Inside VM
        run: |
          scp -P 2222 -r . github@localhost:/home/github/archiso
          ssh -p 2222 github@localhost "sudo pacman -Sy --noconfirm archiso && cd /home/github/archiso && sudo mkarchiso -v -w work -o out ."

      - name: Retrieve ISO
        run: |
          scp -P 2222 github@localhost:/home/github/archiso/out/*.iso out/
          ISO_DATE=$(date -I)
          ISO_NAME="ArchUtils-${ISO_DATE}.iso"
          mv out/*.iso "out/$ISO_NAME"
          echo "ISO_NAME=$ISO_NAME" >> $GITHUB_ENV
          echo "ISO_DATE=$ISO_DATE" >> $GITHUB_ENV

      - name: Upload ISO as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: archiso
          path: out/*.iso

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download ISO Artifact
        uses: actions/download-artifact@v4
        with:
          name: archiso
          path: out

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "monthly-build-${{ env.ISO_DATE }}"  # Tag for tracking
          name: "Build ${{ env.ISO_DATE }}"  # Release name
          body: "Automated monthly build of ArchUtils for ${{ env.ISO_DATE }}"
          files: out/*.iso
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
